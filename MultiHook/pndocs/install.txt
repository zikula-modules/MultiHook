$Id$

Sine version 4.0 MultiHook needs the AjaxSupportPackage because the prototype.js used
here has been removed fro the distribution. The reason was I was too lazy to maintain
the same files in three or four projects each. Now we have one place only.
You can get the AjaxSupportPackage from
    http://noc.postnuke.com/frs/?group_id=8
Install it as documented.

Copy the MultiHook folder to your Postnuke's modules folder, regenerate the
modules list in the admin panel, initialize and activate it.
For further changes to your theme see the chapter "Ajax support".

Do not forget to activate the MultiHook for the modules you want to use it with, like
pnForum or Pagesetter.

If present, the links stored in AutoLinks will be copied to the MultiHook
tables.

You can now add links, acronyms and abbreviations in the admin panel or by selecting
text while pressing the CTRL-button on every page inside PN.


Internet Explorer special trick:
--------------------------------
IE cannot (sigh...) handle the abbr tag correctly (or better said: it cannot
handle it correctly at all). We need a special css trick to make this
possible. Add this

abbr, acronym, span.abbr
{
    cursor: help;
    border-bottom: 1px dashed #000;
}

to your stylesheet files.

The abbr tag created will look like this:

<abbr title="longlonglong"><span class="abbr" title="longlonglong">short</span></abbr>

So it will work on IE and not break Mozilla or other Gecko based browsers.

External Links
--------------
MultiHook can add special markup for external links. For this feature you can (and
should) specify a css class in the configuration, e.g. externallink.

The css declaration in your style.css / styleNN.css can look like:

a.externallink {
    padding-left:  14px;
    font-size: 11px;
    background: url('../../../modules/MultiHook/pnimages/extlink.gif') no-repeat bottom left;
}
a:hover.externallink {
    padding-left:  14px;
    font-size: 11px;
    background: url('../../../modules/MultiHook/pnimages/extlink.gif') no-repeat bottom left;
}

This adds the image extlink.gif to the left of the created link. Please note that
the path to the image file is relative to the place of the css file used. Without
the a:hover the image would disappear in IE when the mouse is over the link
(sigh, again IE..).

Make sure that your target links are absolute, not relative. Linking to www.pn-cms.de will lead to
http://www.yourdomain.com/www.pn-cms.de although the a-tag looks correct in the page source.
This is not a bug in MultiHook, but the normal behaviour if a browser does not reckognize a fully
qualified url.

Ajax support
------------
Since version 2.0 MultiHook uses Ajax for easier adding and manipulating of data.

********************
*** Important note for users upgrading from MultiHook 2.0: Since 3.0 prototype.js
*** has to be present in the <PostNuke-Root>/javascript/ajax folder. You have to install the
*** AjaxSupportPackage from http://noc.postnuke.com/frs/?group_id=8 to get all necessary
*** files.
*** This is a preparation for PN .8.0.0.
*** When using pnForum >2.6 (or maybe other prototype enabled modules too) this is not necessary
*** because you already have <PostNuke-Root>/javascript/ajax - just make sure that you have the
*** latest version of prototype.js
********************

If you want to use this feature, your PostNuke theme has to be prepared for
this and you have to enable javascript in your browser.
Copy modules/MultiHook/pntemplates/plugins/function.multihookhelper.php to your
modules/Xanthia/plugins folder and change your theme templates:

<... some code ...>
<link rel="stylesheet" type="text/css" href="modules/MultiHook/pnstyle/style.css" />
</head>
<body>
<... lots of code ...>
<!--[ multihookhelper ]-->
</body>
</html>

The multihookhelper plugin adds the necessary javascript and hidden divs if the users has min.
ACCESS_ADD permissions for MultiHook.

In non-Xanthiathemes (legacy, AT...) you can call

    $multihookhelper = pnModFunc('MultiHook', 'admin', 'helper'));

to retrieve the HTML in $multihookhelper and show where you want (which in fact is what the
plugin does too).

You can now select text portions of your page. When you press CTRL when releasing the mouse button
at the end of the selection process, a popup window will appear. Without CTRL you can copy and
paste the text as before.

If you do not want to use Ajax you can still use the normal admin panel for adding and changing
the data.

Needles
-------
Needles are a clever invention by Oivind Skau and have been implemented in PagEd for the
first time.
You can simply add any kind of link by writing MODULENAME{moduleparams} if there is a
corresponding pnneedleapi-function available, eg.

PNFORUMF_2 adds a link to the forum with id 2
PNFORUMT_5 adds a link to the topic with id 5

There is no permission check done for showing the links!

Important: After adding new needles, you need to click the needles confiuration in Multihook
once (index.php?module=MultiHook&type=admin&func=viewneedles) in order to make them available
in the system. This rescans the pnneedleapi folder. Now the new needles are available.

These needles are shipped with MultiHook:

DOWNLOAD{C_downloadcategoryid|D_downloadid|L_downloadid} 
-> links to a download category, the download details or directly to the download 
PAGED{publicationid}
-> links to the PagEd article, showing its title
PAGESETTER{tid}
-> links to the list of all publications of publication type tid
PAGESETTER{tid}_{pid} 
-> links to the Pagesetter publication with publication type tid 
   and publication pid
PHOTOSHARE{A_albumid|P_pictureid|T_pictureid}
-> links to an album, an image or a thumbnail with a link to the full size
   image. In case of P its also possible to add addtional parameter for the
   width and height to be used. So you can resize the output:
   PHOTOSHAREP_3_200_150 will result in an image with width=200 and height=150
PNFORUM{F_forumid|T_topicid} 
-> links to a forum or topic

Writing new needles (for developers only)
-----------------------------------------
A needle consists of two simple functions stored in two files, see the MultiHook/pnneedleapi/
folder. 

modulename_info.php contains MultiHook_needleapi_moulename_info(), which just returs a 
string of how to use the needle.
modulename.php contains MultiHook_nedleapi_modulename(), which does the real work and returns
the replacement string. It gets the needle id passed as $nid. The needle id is the part after
the uppercase modulename, in PNFORUMF_1 the F_1 is the needle id. 
Parsing and acting on the results is your part as developer ;-)

You are encouraged to use some caching mechanism in order to avoid consecutive SQL calls.

 