$Id$

Copy the MultiHook folder to your Postnuke's modules folder, regenerate the 
modules list in the admin panel, initialize and activate it. Do not forget to
activate the MultiHook for the modules you want to use it with, like phpBB_14,
pnForum or Pagesetter.

If present, the links stored in AutoLinks will be copied to the MultiHook
tables.

You can now add links, acronyms and abbreviations in the admin panel.


Internet Explorer special trick:
--------------------------------

IE cannot (sigh...) handle the abbr tag correctly (or better said: it cannot
handle it correctly at all). We need a special css trick to make this
possible. Add this

abbr, acronym, span.abbr
{
    cursor: help;
    border-bottom: 1px dashed #000;
}

to your stylesheet files.

The abbr tag created will look like this:

<abbr title="longlonglong"><span class="abbr" title="longlonglong">short</span></abbr>

So it will work on IE and not break Mozilla or other Gecko based browsers.

External Links
--------------
MultiHook can add special markup for external links. For this feature you can (and
should) specify a css class in the configuration, e.g. externallink.

The css declaration in your style.css / styleNN.css can look like:

a.externallink {
    padding-left:  14px;
    font-size: 11px;
    background: url('../../../modules/MultiHook/pnimages/extlink.gif') no-repeat bottom left;
}
a:hover.externallink {
    padding-left:  14px;
    font-size: 11px;
    background: url('../../../modules/MultiHook/pnimages/extlink.gif') np-repeat bottom left;
}

This adds the image extlink.gif to the left of the created link. Please note that
the path to the image file is relative to the place of the css file used. Without
the a:hover the image would disappear in IE when the mouse is over the link 
(sigh, again IE..).

Ajax support
------------
Since version 2.0 MultiHook uses Ajax for easier adding and manipulating of entries. 
If you want to use this feature, your PostNuke theme as to be prepared for
this and you have to enable javascript in your browser. 
Copy modules/MultiHook/pntemplates/plugins/function.multihookhelper.php to your 
modules/Xanthia/plugins folder and change your theme templates:

<... some code ...>
</head>
<body>
<!--[ multihookhelper ]-->
<... more code ...>

The multihookhelper plugin adds the necessary javascript and hidden divs if the users has min.
ACCESS_ADD permissions for MultiHook.

If you do not want to use Ajax you can still use the normal admin panel for adding and changing
the data.

Common problems with Ajax
-------------------------
Beginning with .762 PostNuke offers the filtering of HTML output using SafeHTML. This will remove all
onclick handlers from the MultiHook links for editing entries which makes them useless.

You can either
* deactivate SafeHTML (not recommended)
* or patch pnAPI.php to not use SafeHTML if the user has admin permissions for MultiHook

Both solution are not really good, but the second one should be preferred.

Change line pnAPI.php ,line 655ff to

    foreach (func_get_args() as $var) {
        if( (pnConfigGetVar('safehtml') == '1') && !pnSecAuthAction(0, 'MultiHook::', '.*', ACCESS_ADMIN)){
            $safehtml->clear();       
            $var = $safehtml->parse($var);
        }
        // Preparse var to mark the HTML that we want
        if (!empty($allowedtags))
            $var = preg_replace($allowedtags, "\022\\1\024", $var);

        if (pnConfigGetVar('safehtml') != '1' || pnSecAuthAction(0, 'MultiHook::', '.*', ACCESS_ADMIN)) {
            // Prepare var
            $var = htmlspecialchars($var);
        }

You are doing this at your own risk - do not blame me for any security problems that
my arise.

